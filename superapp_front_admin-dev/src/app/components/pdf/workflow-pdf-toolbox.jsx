"use client";
import React from "react";
import PropTypes from "prop-types";

import ToolBoxItem from "@/app/components/pdf/workflow-pdf-toolbox-autogen";

/**
 * PDFToolbox component. component that renders a toolbox for manipulating PDF documents.
 * @param {Object} props - The component props.
 * @param {Array} props.tools - The array of tools.
 * @param {Array} props.documentFields - The array of document fields.
 * @param {Function} props.addText - The function to add text.
 * @param {Function} props.addCheckBox - The function to add a checkbox.
 * @param {Function} props.addImage - The function to add an image.
 * @param {Function} props.addDrawing - The function to add a drawing.
 * @param {Function} props.onFieldSelect - The function to handle field selection.
 * @returns {JSX.Element} The rendered PDFToolbox component.
 */
function PDFToolbox(props) {
  const {
    tools,
    documentFields,
    addText,
    addCheckBox,
    addImage,
    addDrawing,
    onFieldSelect,
    currentWorkflowID
  } = props;

  const handleEntityClick = (key, value) => {
    onFieldSelect(key, value);
  };

  return (
    <>
      <div className=" relative rounded-md">
        <div className="w-full h-full flex-col gap-4 flex justify-start ">
          <div className="w-full border border-gray-1000 rounded-md p-4">
            <h1 className="text-lg font-semibold mt-1 mb-1">Actions</h1>
            <div
              className="cursor-pointer flex justify-start items-center py-2 px-2 text-xs gap-2  false text-black-1000 w-full  p-2 rounded text-gray-500 hover:bg-purple-200 hover:text-purple-700 transition duration-75"
              onClick={addText}
            >
              <i className="fas fa-text-width text-green-500" />
              <span>Add Text</span>
            </div>
            <div
              className="cursor-pointer flex justify-start items-center py-2 px-2 text-xs gap-2  false text-black-1000 w-full  p-2 rounded text-gray-500 hover:bg-purple-200 hover:text-purple-700 transition duration-75"
              onClick={addCheckBox}
            >
              <i className="far fa-check-square text-green-500" />
              <span>Add Checkbox</span>
            </div>
            <div
              className="cursor-pointer flex justify-start items-center py-2 px-2 text-xs gap-2  false text-black-1000 w-full  p-2 rounded text-gray-500 hover:bg-purple-200 hover:text-purple-700 transition duration-75"
              onClick={addImage}
            >
              <i className="far fa-image text-green-500" />
              <span>Add Image</span>
            </div>
            <div
              className="cursor-pointer flex justify-start items-center py-2 px-2 text-xs gap-2  false text-black-1000 w-full  p-2 rounded text-gray-500 hover:bg-purple-200 hover:text-purple-700 transition duration-75"
              onClick={addDrawing}
            >
              <i className="far fa-edit text-green-500" />
              <span>Add Signature</span>
            </div>
          </div>

          <div className="w-full border border-gray-1000 rounded-md p-4">
            <h1 className="text-lg font-semibold mt-1 mb-1">
              Autogenerated Properties
            </h1>

            <ToolBoxItem
              onEntityClick={handleEntityClick}
              currentWorkflowID={currentWorkflowID}
              toolName="Data from API"
            />
          </div>


        </div>
      </div>
    </>
  );
}

PDFToolbox.propsTypes = {
  tools: PropTypes.array,
  documentFields: PropTypes.array,
  addText: PropTypes.array,
  addCheckBox: PropTypes.array,
  addImage: PropTypes.array,
  addDrawing: PropTypes.array,
};

export default PDFToolbox;
